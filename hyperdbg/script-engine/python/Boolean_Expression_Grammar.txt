# OneOpFunc1 input is a number and returns a number.
.OneOpFunc1->poi db dd dw dq neg hi low not check_address strlen wcslen interlocked_increment interlocked_decrement reference physical_to_virtual virtual_to_physical

# TwoOpFunc1 inputs are two numbers and returns a number.
.TwoOpFunc1->ed eb eq interlocked_exchange interlocked_exchange_add

# ThreeOpFunc1 inputs are three numbers and returns a number.
.ThreeOpFunc1->interlocked_compare_exchange


.OperatorsOneOperand->inc dec reference poi

S->BE


BE->B1




B1->B2 B1'
B1'->|| B2 B1' @AND
B1'->eps

B2->B3 B2'
B2'->&& B3 B2' @OR
B2'->eps



B3->CMP
B3->EXP


CMP->EXP > EXP @GT
CMP->EXP < EXP @LT
CMP->EXP >= EXP @EGT
CMP->EXP <= EXP @ELT
CMP->EXP == EXP @EQUAL
CMP->EXP != EXP @NEQ
CMP->EXP 

EXP->E1 E0'
E0'->| E1 @OR E0' 
E0'->eps


E1->E2 E1'
E1'->^ E2 @XOR E1' 
E1'->eps

E2->E3 E2'
E2'->& E3 @AND E2' 
E2'->eps  

E3->E4 E3'
E3'->>> E4 @ASR E3'
E3'-><< E4 @ASL E3'
E3'->eps



E4->E5 E4'
E4'->+ E5 @ADD E4'
E4'->- E5 @SUB E4'
E4'->eps

E5->E10 E5'
E5'->/ E12 @DIV E5'
E5'->% E12 @MOD E5'
E5'->* E12 @MUL E5'
E5'->eps 



E10->E12
E10->- E12 @NEG
E10->+ E12 E13
E10->~ E12 @NOT 
E10->* E12 @POI
E10->& E12 @REFERENCE


E12->.OneOpFunc1 ( EXP ) @.OneOpFunc1
E12->.TwoOpFunc1 ( EXP , EXP ) @.TwoOpFunc2
E12->.ThreeOpFunc1 ( EXP , EXP , EXP ) @.ThreeOpFunc1 

E12->( BE ) E13


# Types must have '_' at the first 
E12->_register @PUSH
E12->_global_id @PUSH
E12->_local_id @PUSH


# numbers 
E12->_hex @PUSH
E12->_decimal @PUSH
E12->_octal @PUSH
E12->_binary @PUSH


E12->_pseudo_register @PUSH


